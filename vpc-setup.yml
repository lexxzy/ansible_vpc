- hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: import Vpc Variable
      include_vars: vars/vpc_setup

    - name: Create Vprofile Vpc
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        region: "{{region}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        state: "{{state}}"
      register: vpcout

    #- debug:
    #   var: vpcout

    - name: create public subnet 1 in zone1
      ec2_vpc_subnet:
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{ region }}"
          az: "{{ zone1 }}"
          state: "{{state}}"
          cidr: "{{PubSub1Cidr}}"
          map_public: yes
          resource_tags:
            Name: vprofile-pubsub1
      register: public1_out

    - name: create public subnet 2 in zone2
      ec2_vpc_subnet:
          vpc_id: "{{vpcout.vpc.id}}"
          region: "{{ region }}"
          az: "{{ zone2 }}"
          state: "{{state}}"
          cidr: "{{PubSub2Cidr}}"
          map_public: yes
          resource_tags:
             Name: vprofile-pubsub2
      register: public2_out

    - name: create public subnet 3 in zone3
      ec2_vpc_subnet:
              vpc_id: "{{vpcout.vpc.id}}"
              region: "{{ region }}"
              az: "{{ zone1 }}"
              state: "{{state}}"
              cidr: "{{PubSub3Cidr}}"
              map_public: yes
              resource_tags:
                Name: vprofile-pubsub3
      register: public3_out

    - name: create private subnet 1 in zone1
      ec2_vpc_subnet:
              vpc_id: "{{vpcout.vpc.id}}"
              region: "{{ region }}"
              az: "{{ zone1 }}"
              state: "{{state}}"
              cidr: "{{PriSub1Cidr}}"
              map_public: yes
              resource_tags:
                Name: vprofile-prisub1
      register: pri1_out

    - name: create private subnet 2 in zone2
      ec2_vpc_subnet:
              vpc_id: "{{vpcout.vpc.id}}"
              region: "{{ region }}"
              az: "{{ zone2 }}"
              state: "{{state}}"
              cidr: "{{PriSub2Cidr}}"
              map_public: yes
              resource_tags:
                 Name: vprofile-prisub2
      register: pri2_out

    - name: create private subnet 3 in zone3
      ec2_vpc_subnet:
                  vpc_id: "{{vpcout.vpc.id}}"
                  region: "{{ region }}"
                  az: "{{ zone1 }}"
                  state: "{{state}}"
                  cidr: "{{PriSub3Cidr}}"
                  map_public: yes
                  resource_tags:
                    Name: vprofile-prisub3
      register: pri3_out
    - name: internet Gateway setip
      ec2_vpc_igw:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{region}}"
        state: present
        resource_tags:
          Name: Vprofile-IGW
      register: igw

    - name: Set up public subnet routetable
      ec2_vpc_route_table:
        vpc_id: "{{vpcout.vpc.id}}"
        region: "{{ region }}"
        tags:
          Name: Vprofile-Public
        subnets:
          - "{{ public1_out.subnet.id }}"
          - "{{ public2_out.subnet.id }}"
          - "{{ public3_out.subnet.id }}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw.gateway_id }}"
      register: Vpro_public_route_table

    - name: Create new nat gateway and allocate new EIP if a nat gateway does not yet exist in the subnet.
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{ public1_out.subnet.id}}"
        wait: yes
        region: "{{ region }}"
        if_exist_do_not_create: true
      register: NAT_out
    - name: Set up public subnet routetable
      ec2_vpc_route_table:
            vpc_id: "{{vpcout.vpc.id}}"
            region: "{{ region }}"
            tags:
              Name: Vprofile-Public
            subnets:
              - "{{ pri1_out.subnet.id }}"
              - "{{ pri2_out.subnet.id }}"
              - "{{ pri3_out.subnet.id }}"
            routes:
              - dest: 0.0.0.0/0
                gateway_id: "{{ NAT_out.nat_gateway_id }}"
      register: Vpro_private_route_table